{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple example Todo App with NodeJS API project to demonstrate Swagger Documentation",
    "version": "1.0.0",
    "title": "Todo App APIs",
    "contact": {
      "email": "noaman.ilyas@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3080",
  "paths": {
    "/todo": {
      "get": {
        "summary": "Get all todos",
        "description": "Get all todos",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Save new todo",
        "description": "Save new todo",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Update todo",
        "description": "Update todo",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "626915f6afc419903ed28544"
                },
                "status": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete todo",
        "description": "Delete todo",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "626915f6afc419903ed28544"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/todoAll": {
      "delete": {
        "summary": "Delete all todos",
        "description": "Delete all todos",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "626922d33ceda11d7b5a06ec"
              },
              "name": {
                "type": "string",
                "example": "Aenean aliquam varius ligula"
              },
              "status": {
                "type": "boolean",
                "example": false
              }
            }
          }
        },
        "error": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "InvalidResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "result": {
          "type": "boolean"
        },
        "error": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
